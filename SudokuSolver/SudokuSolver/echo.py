from pyamf import AMF3
from pyamf.remoting.client import RemotingService

gateway = 'http://127.0.0.1:8000/sudoku/amf/call/amfrpc3'
client = RemotingService(gateway, amf_version = AMF3)
service = client.getService('srv.echo')

print ('> TRY: too short input')

print service(' 232 2 33..fd')

print ('> TRY: sudoku without 3 values - 1 iter needed')

print service(''
    '123|456|789\n'
    '456|789|123\n'
    '789|123|456\n'
    '---+---+---\n'
    '234|567|891\n'
    '567|891|234\n'
    '891|234|567\n'
    '---+---+---\n'
    '345|678|91.\n'
    '6.8|912|345\n'
    '912|.45|678'
    '')

print ('> TRY: sudoku without 9 values in different rows/cols - 1 iter needed')

print service(''
    '123|4.6|789\n'
    '456|789|1.3\n'
    '.89|123|456\n'
    '---+---+---\n'
    '23.|567|891\n'
    '567|89.|234\n'
    '891|234|.67\n'
    '---+---+---\n'
    '345|678|91.\n'
    '6.8|912|345\n'
    '912|.45|678'
    '')

print ('> TRY: sudoku without values in two rows - no deterministic solution')

print service(''
    '123|456|789\n'
    '456|789|123\n'
    '789|123|456\n'
    '---+---+---\n'
    '...|...|...\n'
    '...|...|...\n'
    '891|234|567\n'
    '---+---+---\n'
    '345|678|912\n'
    '678|912|345\n'
    '912|345|678'
    '')

print ('> TRY: sudoku with no values - no deterministic solution')

print service(''
    '...|...|...\n'
    '...|...|...\n'
    '...|...|...\n'
    '---+---+---\n'
    '...|...|...\n'
    '...|...|...\n'
    '...|...|...\n'
    '---+---+---\n'
    '...|...|...\n'
    '...|...|...\n'
    '...|...|...'
    '')
 
print ('> TRY: without 30 values')

print service(''
    '12.|4.6|789\n'
    '45.|7.9|1..\n'
    '.89|.23|.56\n'
    '---+---+---\n'
    '23.|.67|89.\n'
    '.6.|89.|2.4\n'
    '8.1|2.4|.6.\n'
    '---+---+---\n'
    '34.|6.8|91.\n'
    '6.8|.1.|.4.\n'
    '.12|.45|678'
    '')
    
print ('> TRY: without 33 values')

print service(''
    '12.|4.6|789\n'
    '45.|7.9|1..\n'
    '.89|..3|.56\n'
    '---+---+---\n'
    '23.|.67|8..\n'
    '.6.|89.|2.4\n'
    '8.1|2.4|.6.\n'
    '---+---+---\n'
    '34.|..8|91.\n'
    '6.8|.1.|.4.\n'
    '.12|.45|678'
    '')
    
print ('> TRY: without 36 values')

print service(''
    '12.|4.6|789\n'
    '.5.|7.9|1..\n'
    '.89|..3|.56\n'
    '---+---+---\n'
    '23.|.67|8..\n'
    '...|89.|2.4\n'
    '8.1|2.4|.6.\n'
    '---+---+---\n'
    '34.|..8|91.\n'
    '6.8|...|.4.\n'
    '.12|.45|678'
    '')
    
print ('> TRY: without 39 values')

print service(''
    '12.|4.6|789\n'
    '.5.|7.9|1..\n'
    '..9|..3|.56\n'
    '---+---+---\n'
    '23.|.67|8..\n'
    '...|89.|2..\n'
    '8.1|2.4|.6.\n'
    '---+---+---\n'
    '34.|..8|91.\n'
    '6.8|...|.4.\n'
    '.1.|.45|678'
    '')
    
print ('> TRY: without 42 values')

print service(''
    '12.|4.6|7.9\n'
    '.5.|7.9|1..\n'
    '..9|..3|.5.\n'
    '---+---+---\n'
    '23.|.67|8..\n'
    '...|.9.|2..\n'
    '8.1|2.4|.6.\n'
    '---+---+---\n'
    '34.|..8|91.\n'
    '6.8|...|.4.\n'
    '.1.|.45|678'
    '')
    
print ('> TRY: without 45 values')

print service(''
    '12.|4.6|7.9\n'
    '.5.|7..|1..\n'
    '..9|..3|.5.\n'
    '---+---+---\n'
    '23.|.67|8..\n'
    '...|.9.|2..\n'
    '8.1|2.4|.6.\n'
    '---+---+---\n'
    '34.|..8|91.\n'
    '6.8|...|.4.\n'
    '.1.|.45|6.8'
    '')
    
print ('> TRY: without 48 values')

print service(''
    '12.|4.6|7.9\n'
    '.5.|7..|1..\n'
    '..9|..3|.5.\n'
    '---+---+---\n'
    '23.|..7|8..\n'
    '...|.9.|2..\n'
    '8.1|2.4|.6.\n'
    '---+---+---\n'
    '.4.|..8|91.\n'
    '6.8|...|...\n'
    '.1.|.45|6.8'
    '')
    
print ('> TRY: without 51 values')

print service(''
    '.2.|4.6|7.9\n'
    '.5.|7..|1..\n'
    '..9|..3|.5.\n'
    '---+---+---\n'
    '23.|..7|8..\n'
    '...|.9.|...\n'
    '8.1|2.4|.6.\n'
    '---+---+---\n'
    '.4.|..8|91.\n'
    '..8|...|...\n'
    '.1.|.45|6.8'
    '')
